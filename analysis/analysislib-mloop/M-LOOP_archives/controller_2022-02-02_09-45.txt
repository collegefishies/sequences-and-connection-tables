mloop_version='3.2.1'
archive_type='controller'
num_out_params=16
out_params=[array([ 5.048e+01,  5.032e+01,  5.100e+00,  5.000e-01, -8.000e-01,       -2.000e-02, -1.860e+00]), array([50.39550909, 50.12565333,  5.24120168,  0.4666295 ,  0.17707879,       -0.27031967, -0.72273788]), array([ 5.05362614e+01,  5.05032096e+01,  5.23531592e+00, -4.24692379e-02,       -1.44765104e-01, -3.10115074e-01, -5.27196652e-01]), array([50.49015331, 50.36690689,  5.14787901,  0.47727528, -0.5625474 ,        0.52116298, -1.65118956]), array([50.48357306, 50.33974431,  5.03420345,  0.50478828, -1.29501246,       -0.61256772, -1.39594741]), array([50.56965139, 50.10625632,  5.0977803 , -0.31356552, -1.08375982,        0.39146388, -0.91978366]), array([ 5.05856652e+01,  5.04050017e+01,  5.23932225e+00,  6.63897893e-02,        2.55139587e-02, -8.60925716e-02, -1.23513070e-01]), array([50.48344285, 50.55208468,  5.16227362,  0.48751845, -1.27604199,       -0.87014908, -0.87267132]), array([50.58003332, 50.13414891,  5.02400054,  0.32937713, -1.10564662,        0.74326245, -0.98717492]), array([ 5.04233719e+01,  5.05604679e+01,  5.05320949e+00, -2.28973656e-01,        6.73665971e-02, -3.88392464e-02, -4.89320253e-01]), array([ 5.04669575e+01,  5.04342078e+01,  5.05175153e+00,  7.80766451e-01,       -1.05637864e+00, -4.40929672e-02, -2.09643703e+00]), array([ 5.03913433e+01,  5.04353361e+01,  5.01951752e+00,  5.76366280e-03,       -2.57415132e-01,  8.52940680e-01, -3.33122911e-01]), array([50.38825449, 50.5283078 ,  5.10380065,  0.26416532, -0.98229588,       -0.08375241, -1.9830571 ]), array([50.56193773, 50.27589803,  5.1831543 ,  0.18392142, -0.38724284,       -1.05047068, -0.44326658]), array([50.61273522, 50.4040066 ,  5.16990858,  0.46586833,  0.35476537,        0.71753989, -2.2770283 ]), array([50.62614617, 50.20489424,  5.06986474,  0.54059366, -0.4765186 ,       -0.93326653, -1.78572215])]
out_type=['differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution']
out_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
in_costs=[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
in_uncers=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
in_bads=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
in_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
max_num_runs=20000.0
start_datetime='2022-02-02_09-45'
training_type='differential_evolution'
num_params=7
min_boundary=array([50.3, 50.1,  5. , -1. , -1.5, -1.5, -2.5])
max_boundary=array([50.65, 50.65,  5.3 ,  1.  ,  1.  ,  1.  ,  1.  ])
param_names=['green_mot_frequency', 'lattice_loading_frequency', 'x_bias_field_loading', 'y_bias_field_loading', 'z_bias_field_loading', 'x_bias_field_loading_in_cavity', 'y_bias_field_loading_in_cavity']
num_in_costs=15
best_cost=-0.0
best_uncer=0.0
best_params=array([ 5.048e+01,  5.032e+01,  5.100e+00,  5.000e-01, -8.000e-01,       -2.000e-02, -1.860e+00])
best_index=1

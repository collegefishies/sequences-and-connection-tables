mloop_version='3.2.1'
archive_type='controller'
num_out_params=60
out_params=[array([50.34666463,  0.09042286, -0.8123286 ]), array([50.4347372 ,  0.21621621,  0.17661579]), array([50.12147277, -0.17823964, -0.87132885]), array([50.43364488,  0.83892331,  0.3740833 ]), array([50.1       ,  1.        , -0.94745319]), array([50.62166463,  0.44396896, -0.92285572]), array([50.19389385,  1.        , -1.5       ]), array([50.11740634,  0.39033114, -1.18909599]), array([50.41262746, -0.90957714, -1.5       ]), array([50.1       ,  0.82451697,  0.40653066]), array([ 5.03140010e+01,  3.41429653e-01, -2.31715492e-02]), array([50.49074251,  0.09106892, -1.00425745]), array([50.1       ,  0.42597852,  0.4376714 ]), array([50.1671797 ,  0.52607843, -0.24247316]), array([50.46954086, -0.44815232, -0.22992453]), array([50.53502193,  0.49322315, -1.41593167]), array([50.63310688, -1.        ,  0.44524362]), array([50.30066366, -1.        ,  0.1403513 ]), array([50.65      , -1.        ,  0.51182125]), array([50.41985281,  0.09038776, -0.92376993]), array([50.49852852, -0.55738265, -0.39366092]), array([50.48331232, -0.42179136, -0.22249056]), array([50.46030962, -0.40391817, -0.27885496]), array([50.29099267, -0.248269  , -0.21318343]), array([ 5.04301280e+01, -4.55316183e-01,  2.78996773e-02]), array([50.42089645, -0.4783626 ,  0.06690709]), array([50.43432746, -0.33333582, -0.08446178]), array([50.49356796,  0.48983672, -0.11080059]), array([50.47180901, -0.51855342, -0.26061638]), array([50.45267651, -0.51651337, -0.24566575]), array([50.45752533, -0.3783178 , -0.36417271]), array([50.2648613 , -0.07356625, -0.41471975]), array([50.28524629,  0.24209877,  1.        ]), array([50.46999028, -0.49953397, -0.12499769]), array([50.45473892, -0.34398639, -0.26572685]), array([50.28911186, -0.7707142 , -0.29286523]), array([50.64139725,  0.42369659,  1.        ]), array([ 5.04950509e+01, -5.26598360e-01, -4.17470880e-02]), array([50.39260877, -0.11274876, -0.41937669]), array([50.58754237,  0.47378155, -0.8835158 ]), array([50.53370028, -0.33689311,  1.        ]), array([50.44209283,  0.43669947,  1.        ]), array([50.46821718, -0.44272002, -0.23788031]), array([50.62922856, -0.65389983, -0.75104611]), array([50.28654659, -1.        ,  1.        ]), array([50.47978979, -0.4669966 , -0.16099101]), array([50.19454086, -1.        ,  1.        ]), array([50.57439643,  0.74280121, -0.92746643]), array([50.4360891 , -0.86841102,  1.        ]), array([50.65      ,  0.55184768, -0.31102485]), array([50.48085231, -0.45108189, -0.24155951]), array([50.5734724 ,  0.63643576,  0.13101934]), array([50.28264145, -0.75370829, -1.20095652]), array([50.47459476, -0.44912253, -0.19418888]), array([50.49481244, -0.51004948, -0.18223678]), array([50.45504575, -0.69992342, -0.69095524]), array([50.65      , -0.81189086, -0.43118883]), array([50.48762738, -0.54418762, -1.47992453]), array([50.47357417, -0.45670132, -0.23799942]), array([50.39324972,  0.28589885, -1.24741561])]
out_type=['differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution']
out_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
in_costs=[-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.7334385168275983, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
in_uncers=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
in_bads=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
in_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
max_num_runs=2000.0
start_datetime='2022-03-31_16-21'
training_type='differential_evolution'
num_params=3
min_boundary=array([50.1, -1. , -1.5])
max_boundary=array([50.65,  1.  ,  1.  ])
param_names=['lattice_loading_frequency', 'y_bias_field_loading', 'z_bias_field_loading']
num_in_costs=59
best_cost=-1.7334385168275983
best_uncer=0.0
best_params=array([50.46954086, -0.44815232, -0.22992453])
best_index=15
